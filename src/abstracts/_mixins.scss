@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin absCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}


// MEDIA QUERY MANAGER
/*
0 - 600px:      Phone
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet landscape
[1200 - 1800] is where our normal styles apply
1800px + :      Big desktop

$breakpoint arguement choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER: Base + typography > general layout + grid > page layout > components

1em = 16px
*/
@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        @media only screen and (max-width: 37.5em) { @content };    //600px
    }
    @if $breakpoint == tab-port {
        @media only screen and (max-width: 56.25em) { @content };     //900px
    }
    @if $breakpoint == tab-land {
        @media only screen and (max-width: 75em) { @content };    //1200px
    }
    @if $breakpoint == big-desktop {
        @media only screen and (min-width: 112.5em) { @content };    //1800
    }
}










@mixin shadowbend-left {
    
position: relative;
transform-style: preserve-3d; 
z-index: 55;
// background-color: transparent;
&::after, &::before{
    box-shadow:  25px 0px 11px -4px rgba(65, 65, 65, 0.6);
    // transform-origin: bottom;

    position: absolute;
    height: 80%;
    width: 120%;
    right: 11%;
    background-color:inherit;
    transition: all .4s;
    border-radius: inherit;
}
&::after{
    // box-shadow:  21px 1px 9px -4px rgba(36, 36, 36, 0.6);
    transform-origin: top;
    // position: absolute;
    // // right: -3%;
    // right: 4%;
    // right: -0;

    top: 0;
    transform:skewX(-2deg) translateZ(-3px);
    content: '';
    // height: 80%;
    // width: 50%;
    // background-color: rgb(64, 51, 245);
    z-index: -5;
}
&::before{
    // box-shadow:  22px 0 9px -4px rgba(36, 36, 36, 0.66);
    transform-origin: bottom;
    // position: absolute;
    // // right: -3%;
    // right: 4%;
    bottom:  0;
    transform:skewX(2deg) translateZ(-3px);
    content: '';
    // height: 80%;
    // width: 30%;
    // background-color: rgb(61, 151, 121);
    // z-index: -5;
    
}
}

//shadow on the bottom edges of a container
@mixin shadowbend-bottom($shadowcolor){
    // border: 4px solid lightcoral;
    position: relative;
    // transform-style: preserve-3d;
    z-index: 55;
    &::after{
        content: '';
        width: 50%;
        height: 55px;
        background-color: $shadowcolor;
        position: absolute;
        transform-origin: bottom left;
        transform: skewY(-1.7deg) ;
        z-index: -1;
        box-shadow: 0 1.6rem 1rem  rgba(58, 58, 58, 0.952);
        left:  7px;
        bottom: 1px;
    }
    &::before{
        content: '';
        width: 45%;
        height: 55px;
        background-color: $shadowcolor;
        position: absolute;
        bottom: 1px;
        right:  7px;
        transform: skewY(1.7deg) ;
        transform-origin: bottom right;
        z-index: -1;
        box-shadow: 0 1.3rem 1rem rgba(58, 58, 58, 0.952);
    }
}

// Center using grid
@mixin centerusinggrid{
    display: grid;
    place-content: center;
}


// @include bg-nicecard(#ff8c09  ,#d1d361);
// @include bg-nicecard();
@mixin bg-nicecard($color : pink , $darken: purple){
    background: linear-gradient( 180deg,$color  -30%,transparent),
    radial-gradient(circle at 35px 10px,hsla(0,0%,100%,.4) 0,transparent 45%),
    radial-gradient(circle at 10px 10px,$color  0,transparent 60%),
    radial-gradient(circle at 140px 275px,$color  0,transparent 45%),
    $darken;
}

@mixin underline($color: white, $width:40%) {
    display: flex;
    flex-flow: column-reverse;
    justify-content: center;
    align-items: center;
    &::before{
        margin-top: 2rem;
        content: '';
        width: $width;
        height: 1px;
        background-color: $color;

    }
    
}

@mixin border($color : coral){
    border: 4px solid $color;
}
